name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/pro-api:${{ github.sha }} ./api
        docker build -t ${{ secrets.DOCKER_USERNAME }}/pro-ui:${{ github.sha }} ./ui
   

    # Step 4: Push Docker image to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/pro-api:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/pro-ui:${{ github.sha }}
        #docker push ${{ secrets.DOCKER_USERNAME }}/worker:${{ github.sha }}
  
  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region ap-south-1 --name my-cluster
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/new-my-kp.pem
        chmod 600 ~/.ssh/new-my-kp.pem  # Set appropriate permissions for the private key
        # ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
    - name: Deploy to EC2
      
      run: |
          ssh -i ~/.ssh/new-my-kp.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            rm -rf 3_tier_app_solution_k8s
            git clone https://github.com/saurabhd2106/3_tier_app_solution_k8s.git
            cd 3_tier_app_solution_k8s
          EOF

           
    - name: Deploy to EKS
      run: |
          kubectl apply -f ./namespace.yml
          kubectl apply -f ./db_deploy.yml
          kubectl apply -f ./db_clusterip.yml
          kubectl apply -f ./backend_deploy.yml
          kubectl apply -f ./loadbalancer_backend.yml
          kubectl apply -f ./frontend_deploy.yml
          kubectl apply -f ./loadbalancer_frontend.yml
